# vim:ft=ansible:
- hosts: all
  user: root
  gather_facts: True
  vars:
    ssh_privkey: "{{ lookup('env', 'SSH_PRIVKEY') }}"
    ssh_pubkey: "{{ lookup('env', 'SSH_PUBKEY') }}"

  tasks:
    - name: Enable the postgres 9.5 repo
      yum: name=https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm state=present

    - shell: hostnamectl set-hostname {{ inventory_hostname }}

    - name: Disable firewalld we don't need it in testing
      service: name=firewalld enabled=no state=stopped

    - name: Needed utilities and postgres
      yum: name={{ item }} state=present
      with_items:
        - epel-release
        - rsync
        - collectl
        - vim
        - tmux
        - postgresql95
        - postgresql95-server
        - postgresql95-contrib

    - name: Ignore host keys, again, testing...
      template: src=templates/ssh-config dest=/root/.ssh/config

    - authorized_key: user=root key="{{ lookup('env', ssh_pubkey)}}" state=present

    - name: Disable ipv6 in localhost
      lineinfile: dest=/etc/hosts regexp="^::1.*" state=absent

- hosts: master
  user: root
  
  tasks:
    - name: Stop and disable the database for configuration
      service: name=postgresql-9.5 state=stopped enabled=no

    - name: Delete the data folder if it exists
      file: path=/var/lib/pgsql/9.5/data state=absent
    
    - name: Initialize the db
      shell: /usr/pgsql-9.5/bin/postgresql95-setup initdb

    - name: postgres config
      template: src=templates/postgresql.conf.j2 dest=/var/lib/pgsql/9.5/data/postgresql.conf

    - name: pg_hba config
      template: src=templates/pg_hba.conf.j2 dest=/var/lib/pgsql/9.5/data/pg_hba.conf

    - name: Now we can start and enable the master database
      service: name=postgresql-9.5 state=started enabled=yes

    - name: Delete pgpool so we can add it again because IF NOT EXISTS doesn't support CREATE USER
      shell: psql -U postgres -c "DROP ROLE IF EXISTS pgpool;"

    - name: Create the pgpool user
      shell: psql -U postgres -c "CREATE USER pgpool;"

    - name: Create temp dir
      file: path=/tmp/initial-pgdata state=directory

    - name: Dump the database
      shell: pg_basebackup -D /tmp/initial-pgdata -h localhost -U postgres

    - name: Initially sync the base data so replication can work
      shell: rsync -ra --delete /tmp/initial-pgdata/ root@{{ hostvars[item]['ansible_default_ipv4']['address'] }}:/var/lib/pgsql/9.5/data
      with_items: "{{ groups['slaves'] }}"

- hosts: slaves
  user: root
  gather_facts: True
  
  tasks:
    - name: Stop the db before configuring just in case it's been started
      service: name=postgresql-9.5 state=stopped enabled=no

    - name: Copy postgres conf
      template: src=templates/postgresql.conf.j2 dest=/var/lib/pgsql/9.5/data/postgresql.conf

    - name: pg_hba conf
      template: src=templates/pg_hba.conf.j2 dest=/var/lib/pgsql/9.5/data/pg_hba.conf

    - name: recovery conf
      template: src=templates/recovery.conf.j2 dest=/var/lib/pgsql/9.5/data/recovery.conf
    
    - name: Restore selinux tags after the data has been copied from the masters
      shell: restorecon -r /var/lib/pgsql/9.5/data

    - name: Restore file permissions
      file: path=/var/lib/pgsql/9.5/data owner=postgres group=postgres recurse=yes mode=0700
    
    - name: Now we can start the slaves
      service: name=postgresql-9.5 state=started enabled=yes

- hosts: pgpool
  user: root
  gather_facts: True

  tasks:
    - name: Install pgpool
      yum: name=pgpool-II-95 state=present

    - name: Main pgpool conf file
      template: src=templates/pgpool.conf.j2 dest=/etc/pgpool-II-95/pgpool.conf

    - name: pgpool hba conf
      template: src=templates/pool_hba.conf.j2 dest=/etc/pgpool-II-95/pool_hba.conf

    - name: Start and enable pgpool
      service: name=pgpool state=started enabled=yes
